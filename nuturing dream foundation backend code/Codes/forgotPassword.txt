const {logger} = require("firebase-functions");
const {onRequest} = require("firebase-functions/v2/https");
const admin = require("firebase-admin");
const axios = require("axios");
// const cors = require("cors");
admin.initializeApp();

// Define Cloud Function to handle HTTP requests
exports.forgotPassword = onRequest({
  region: "asia-south1", cors: true,
},
async (req, res) => {
  try {
    const {username} = req.body;

    // Check if username is provided
    if (!username) {
      return res.status(400).json({message: "Username is "+
      "required. Please try again"});
    }
    // Check if user exists in the database
    const userRecord = await admin.auth().getUserByEmail(username);
    if (!userRecord) {
      return res.status(404).
          json({message: "No user found with this username. Please try again"});
    }

    const API_KEY = "AIzaSyAxPTIiH0ubjokB7zXlL0cRKEzH5_vIUdA";

    await axios.post(`https://identitytoolkit.googleapis.com/v1/accounts:sendOobCode?key=${API_KEY}`, {
      requestType: "PASSWORD_RESET",
      email: username, // Use 'username' as the email address
    });

    // If password reset email is sent successfully, send response
    res.status(200).json({message: "Password reset email sent successfully"});
  } catch (error) {
    console.error("Error sending password reset email:", error);

    // Log the error
    logger.error("Error sending password reset email:", error);

    if (error.code === "auth/user-not-found") {
      return res.status(404).
          json({message: "No user found with this username. Please try again"});
    }

    res.status(500).
        json({message: "Internal server error", error: error.message});
  }
});
